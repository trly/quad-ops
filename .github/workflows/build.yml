name: Build

permissions:
  contents: write

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Clean Go Cache
        run: |
          mkdir -p $HOME/.cache/go-build
          rm -rf $HOME/.cache/go-build/*
          mkdir -p $HOME/go/pkg
          rm -rf $HOME/go/pkg/mod

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          cache: false

      - name: Download Dependencies
        run: go mod download

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.1.6
          args: --timeout=5m --build-tags=exclude_graphdriver_btrfs --build-tags=exclude_graphdriver_devicemapper
        env:
          CGO_ENABLED: 0

  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4

      - name: Clean Go Cache
        run: |
          mkdir -p $HOME/.cache/go-build
          rm -rf $HOME/.cache/go-build/*
          mkdir -p $HOME/go/pkg
          rm -rf $HOME/go/pkg/mod

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          cache: false

      - name: Download Dependencies
        run: go mod download

      - name: Build
        run: go build -v ./...

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          cache: true

      - name: Download Dependencies
        run: go mod download

      - name: Run tests with coverage
        run: go test -v -race -covermode=atomic -coverprofile=coverage.out ./...

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
